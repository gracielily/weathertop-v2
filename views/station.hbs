{{> menu id="dashboard" isAuthUser=true}}

<!-- Breadcrumbs -->
{{> breadcrumbs navBreadcrumbs=navBreadcrumbs}}
<!-- Main Heading -->
<section class="ui segment">
  <h2 class="ui center aligned icon header blue">
    <i class="circular eye icon"></i>
    {{capitilize station.name}} Overview
  </h2>
</section>
<!-- Reading Nav Link -->
<section class="ui segment">
  <a href="#createStationForm">
    <button class="ui primary button">
      <i class="plus icon"></i>Add New Reading
    </button>
  </a>
</section>
{{#if station.readings}}
  <!-- Readings List -->
  <section class="ui raised segment">
     {{> latestreading station=station}}
     {{> listreadings station=station}}
  </section>
<section class="ui raised segment">
  <h2>
    Weather Trends
  </h2>
  <p>
    Below is a graph representing the historical weather trends for this station.
  </p>
<canvas id="trendsGraph" height="200"></canvas>
</section>
{{else}}
  <!-- No Readings Message -->
  <section class="ui icon blue message">
    <i class="lightbulb icon"></i>
    <div class="content">
      <div class="header">
        No Weather Readings for Station {{capitilize station.name}}
      </div>
      <p>You can create a Reading by filling out the form below.</p>
    </div>
  </section>
{{/if}}
<!-- Create New Reading Form -->
{{> createreading station=station error=error}}

<script>
const ctx = document.getElementById('trendsGraph').getContext('2d');
const station = {{{toJson station}}}
const readings = station.readings;
const data = {
  labels: readings.map(reading => reading.timestamp),
  datasets: [
    {
      label: 'Temperature',
      data: readings.map(reading => reading.temperature),
      borderColor: 'red',
      backgroundColor: 'red',
      pointStyle: 'circle',
            pointRadius: 10,
      pointHoverRadius: 12
    },
    {
      label: 'Wind',
      data: readings.map(reading => reading.windSpeed),
      borderColor: 'blue',
      backgroundColor: 'blue',
      pointStyle: 'circle',
            pointRadius: 10,
      pointHoverRadius: 12
    },
    {
      label: 'Pressure',
      data: readings.map(reading => reading.pressure),
      borderColor: 'green',
      backgroundColor: 'green',
      pointStyle: 'circle',
            pointRadius: 10,
      pointHoverRadius: 12
    }
  ]
};
  
const trendGraph = new Chart(ctx, {
  type: 'line',
  data: data,
  options: {
    responsive: true,
    plugins: {
      legend: {
        position: 'top',
      },
      title: {
        display: true,
        text: 'Weather Trends for ' + station.name + " Station"
      }
    }
  },
});
</script>
